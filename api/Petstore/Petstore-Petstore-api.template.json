{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ApimServiceName": {
      "type": "string"
    },
    "PolicyXMLBaseUrl": {
      "type": "string"
    },
    "serviceUrl": {
      "type": "object"
    },
    "sasToken": {
      "type": "string"
    }
  },
  "resources": [
    {
      "properties": {
        "description": "This is a sample Pet Store Server based on the OpenAPI 3.0 specification. You can find out more about\nSwagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\nSome useful links:\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "PetStore",
        "serviceUrl": "[parameters('serviceUrl').Petstore]",
        "path": "petstore",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "contentType": "application/vnd.oai.openapi.components+json",
        "document": {
          "components": {
            "schemas": {
              "Order": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 10
                  },
                  "petId": {
                    "type": "integer",
                    "format": "int64",
                    "example": 198772
                  },
                  "quantity": {
                    "type": "integer",
                    "format": "int32",
                    "example": 7
                  },
                  "shipDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "enum": [
                      "placed",
                      "approved",
                      "delivered"
                    ],
                    "type": "string",
                    "description": "Order Status",
                    "example": "approved"
                  },
                  "complete": {
                    "type": "boolean"
                  }
                },
                "xml": {
                  "name": "order"
                }
              },
              "Customer": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100000
                  },
                  "username": {
                    "type": "string",
                    "example": "fehguy"
                  },
                  "address": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Address"
                    },
                    "xml": {
                      "name": "addresses",
                      "wrapped": true
                    }
                  }
                },
                "xml": {
                  "name": "customer"
                }
              },
              "Address": {
                "type": "object",
                "properties": {
                  "street": {
                    "type": "string",
                    "example": "437 Lytton"
                  },
                  "city": {
                    "type": "string",
                    "example": "Palo Alto"
                  },
                  "state": {
                    "type": "string",
                    "example": "CA"
                  },
                  "zip": {
                    "type": "string",
                    "example": "94301"
                  }
                },
                "xml": {
                  "name": "address"
                }
              },
              "Category": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "Dogs"
                  }
                },
                "xml": {
                  "name": "category"
                }
              },
              "User": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 10
                  },
                  "username": {
                    "type": "string",
                    "example": "theUser"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "James"
                  },
                  "email": {
                    "type": "string",
                    "example": "john@email.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "12345"
                  },
                  "phone": {
                    "type": "string",
                    "example": "12345"
                  },
                  "userStatus": {
                    "type": "integer",
                    "description": "User Status",
                    "format": "int32",
                    "example": 1
                  }
                },
                "xml": {
                  "name": "user"
                }
              },
              "Tag": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "xml": {
                  "name": "tag"
                }
              },
              "Pet": {
                "required": [
                  "name",
                  "photoUrls"
                ],
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 10
                  },
                  "name": {
                    "type": "string",
                    "example": "doggie"
                  },
                  "category": {
                    "$ref": "#/components/schemas/Category"
                  },
                  "photoUrls": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "xml": {
                        "name": "photoUrl"
                      }
                    },
                    "xml": {
                      "wrapped": true
                    }
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Tag"
                    },
                    "xml": {
                      "wrapped": true
                    }
                  },
                  "status": {
                    "enum": [
                      "available",
                      "pending",
                      "sold"
                    ],
                    "type": "string",
                    "description": "pet status in the store"
                  }
                },
                "xml": {
                  "name": "pet"
                }
              },
              "ApiResponse": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "type": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  }
                },
                "xml": {
                  "name": "##default"
                }
              },
              "PetFindByStatusGetRequest": {
                "x-apim-inline": true
              },
              "PetFindByStatusGet200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PetRequest-xml"
                }
              },
              "PetFindByStatusGet200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PetRequest-xml"
                }
              },
              "PetFindByTagsGetRequest": {
                "items": {
                  "type": "string"
                },
                "x-apim-inline": true
              },
              "PetFindByTagsGet200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PetRequest-xml"
                }
              },
              "PetFindByTagsGet200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PetRequest-xml"
                }
              },
              "Pet-petId-GetRequest": {
                "format": "int64",
                "x-apim-inline": true
              },
              "Pet-petId-PostRequest": {
                "format": "int64",
                "x-apim-inline": true
              },
              "Pet-petId-PostRequest-1": {
                "x-apim-inline": true
              },
              "Pet-petId-PostRequest-2": {
                "x-apim-inline": true
              },
              "Pet-petId-DeleteRequest": {
                "x-apim-inline": true
              },
              "Pet-petId-DeleteRequest-1": {
                "format": "int64",
                "x-apim-inline": true
              },
              "Pet-petId-UploadImagePostRequest": {
                "format": "int64",
                "x-apim-inline": true
              },
              "Pet-petId-UploadImagePostRequest-1": {
                "x-apim-inline": true
              },
              "Pet-petId-UploadImagePostRequest-2": {
                "type": "string",
                "format": "binary"
              },
              "StoreInventoryGet200ApplicationJsonResponse": {
                "type": "object",
                "additionalProperties": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "StoreOrder-orderId-GetRequest": {
                "format": "int64",
                "x-apim-inline": true
              },
              "StoreOrder-orderId-DeleteRequest": {
                "format": "int64",
                "x-apim-inline": true
              },
              "UserCreateWithListPostRequest": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "UserLoginGetRequest": {
                "x-apim-inline": true
              },
              "UserLoginGetRequest-1": {
                "x-apim-inline": true
              },
              "UserLoginGet200ApplicationXmlResponse": {
                "type": "string"
              },
              "UserLoginGet200ApplicationJsonResponse": {
                "type": "string"
              },
              "UserLoginGet200X-Rate-LimitResponseHeader": {
                "format": "int32",
                "x-apim-inline": true
              },
              "UserLoginGet200X-Expires-AfterResponseHeader": {
                "format": "date-time",
                "x-apim-inline": true
              },
              "User-username-GetRequest": {
                "x-apim-inline": true
              },
              "User-username-PutRequest": {
                "x-apim-inline": true
              },
              "User-username-DeleteRequest": {
                "x-apim-inline": true
              },
              "PetRequest-json": {
                "required": [
                  "name",
                  "photoUrls"
                ],
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 10
                  },
                  "name": {
                    "type": "string",
                    "example": "doggie"
                  },
                  "category": {
                    "$ref": "#/components/schemas/Category"
                  },
                  "photoUrls": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "xml": {
                        "name": "photoUrl"
                      }
                    },
                    "xml": {
                      "wrapped": true
                    }
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Tag"
                    },
                    "xml": {
                      "wrapped": true
                    }
                  },
                  "status": {
                    "enum": [
                      "available",
                      "pending",
                      "sold"
                    ],
                    "type": "string",
                    "description": "pet status in the store"
                  }
                },
                "xml": {
                  "name": "pet"
                }
              },
              "PetRequest-xml": {
                "required": [
                  "name",
                  "photoUrls"
                ],
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 10
                  },
                  "name": {
                    "type": "string",
                    "example": "doggie"
                  },
                  "category": {
                    "$ref": "#/components/schemas/Category"
                  },
                  "photoUrls": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "xml": {
                        "name": "photoUrl"
                      }
                    },
                    "xml": {
                      "wrapped": true
                    }
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Tag"
                    },
                    "xml": {
                      "wrapped": true
                    }
                  },
                  "status": {
                    "enum": [
                      "available",
                      "pending",
                      "sold"
                    ],
                    "type": "string",
                    "description": "pet status in the store"
                  }
                },
                "xml": {
                  "name": "pet"
                }
              },
              "UserArrayRequest-json": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "name": "[concat(parameters('ApimServiceName'), '/Petstore/60b976d395edba36988ceda2')]",
      "type": "Microsoft.ApiManagement/service/apis/schemas",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'Petstore')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Add a new pet to the store",
        "request": {
          "description": "Create a new pet in the store",
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "sample": "{\r\n \"id\": 10.0,\r\n \"name\": \"doggie\",\r\n \"category\": {\r\n \"id\": 1.0,\r\n \"name\": \"Dogs\"\r\n },\r\n \"photoUrls\": [\r\n \"string\"\r\n ],\r\n \"tags\": [\r\n {\r\n \"id\": 0,\r\n \"name\": \"string\"\r\n }\r\n ],\r\n \"status\": \"available\"\r\n}",
              "schemaId": "60b976d395edba36988ceda2",
              "typeName": "PetRequest-xml"
            },
            {
              "contentType": "application/xml",
              "sample": "<pet>\r\n <id>10</id>\r\n <name>doggie</name>\r\n <category>\r\n <id>1</id>\r\n <name>Dogs</name>\r\n </category>\r\n <photoUrls>\r\n <photoUrl>string</photoUrl>\r\n </photoUrls>\r\n <tags>\r\n <tag>\r\n <id>0</id>\r\n <name>string</name>\r\n </tag>\r\n </tags>\r\n <status>available</status>\r\n</pet>",
              "schemaId": "60b976d395edba36988ceda2",
              "typeName": "PetRequest-xml"
            },
            {
              "contentType": "application/x-www-form-urlencoded",
              "formParameters": [
                {
                  "name": "id",
                  "type": "integer",
                  "required": false,
                  "values": []
                },
                {
                  "name": "name",
                  "type": "string",
                  "required": false,
                  "values": []
                },
                {
                  "name": "category",
                  "type": "object",
                  "required": false,
                  "values": []
                },
                {
                  "name": "photoUrls",
                  "type": "array",
                  "required": false,
                  "values": []
                },
                {
                  "name": "tags",
                  "type": "array",
                  "required": false,
                  "values": []
                },
                {
                  "name": "status",
                  "type": "string",
                  "required": false,
                  "values": [
                    "available",
                    "pending",
                    "sold"
                  ]
                }
              ]
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/xml",
                "sample": "<pet>\r\n <id>10</id>\r\n <name>doggie</name>\r\n <category>\r\n <id>1</id>\r\n <name>Dogs</name>\r\n </category>\r\n <photoUrls>\r\n <photoUrl>string</photoUrl>\r\n </photoUrls>\r\n <tags>\r\n <tag>\r\n <id>0</id>\r\n <name>string</name>\r\n </tag>\r\n </tags>\r\n <status>available</status>\r\n</pet>",
                "schemaId": "60b976d395edba36988ceda2",
                "typeName": "PetRequest-xml"
              },
              {
                "contentType": "application/json",
                "sample": "{\r\n \"id\": 10.0,\r\n \"name\": \"doggie\",\r\n \"category\": {\r\n \"id\": 1.0,\r\n \"name\": \"Dogs\"\r\n },\r\n \"photoUrls\": [\r\n \"string\"\r\n ],\r\n \"tags\": [\r\n {\r\n \"id\": 0,\r\n \"name\": \"string\"\r\n }\r\n ],\r\n \"status\": \"available\"\r\n}",
                "schemaId": "60b976d395edba36988ceda2",
                "typeName": "PetRequest-xml"
              }
            ]
          },
          {
            "statusCode": 405,
            "description": "Invalid input",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Add a new pet to the store",
        "method": "POST",
        "urlTemplate": "/pet"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/addPet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60b976d395edba36988ceda2')]"
      ]
    },
    {
      "properties": {
        "displayName": "pet"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/addPet/pet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'addPet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "This can only be done by the logged in user.",
        "request": {
          "description": "Created user object",
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "sample": "{\r\n \"id\": 10.0,\r\n \"username\": \"theUser\",\r\n \"firstName\": \"John\",\r\n \"lastName\": \"James\",\r\n \"email\": \"john@email.com\",\r\n \"password\": \"12345\",\r\n \"phone\": \"12345\",\r\n \"userStatus\": 1\r\n}",
              "schemaId": "60b976d395edba36988ceda2",
              "typeName": "User"
            },
            {
              "contentType": "application/xml",
              "sample": "<user>\r\n <id>10</id>\r\n <username>theUser</username>\r\n <firstName>John</firstName>\r\n <lastName>James</lastName>\r\n <email>john@email.com</email>\r\n <password>12345</password>\r\n <phone>12345</phone>\r\n <userStatus>1</userStatus>\r\n</user>",
              "schemaId": "60b976d395edba36988ceda2",
              "typeName": "User"
            },
            {
              "contentType": "application/x-www-form-urlencoded",
              "formParameters": [
                {
                  "name": "id",
                  "type": "integer",
                  "required": false,
                  "values": []
                },
                {
                  "name": "username",
                  "type": "string",
                  "required": false,
                  "values": []
                },
                {
                  "name": "firstName",
                  "type": "string",
                  "required": false,
                  "values": []
                },
                {
                  "name": "lastName",
                  "type": "string",
                  "required": false,
                  "values": []
                },
                {
                  "name": "email",
                  "type": "string",
                  "required": false,
                  "values": []
                },
                {
                  "name": "password",
                  "type": "string",
                  "required": false,
                  "values": []
                },
                {
                  "name": "phone",
                  "type": "string",
                  "required": false,
                  "values": []
                },
                {
                  "name": "userStatus",
                  "type": "integer",
                  "required": false,
                  "values": []
                }
              ]
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{\r\n \"id\": 10.0,\r\n \"username\": \"theUser\",\r\n \"firstName\": \"John\",\r\n \"lastName\": \"James\",\r\n \"email\": \"john@email.com\",\r\n \"password\": \"12345\",\r\n \"phone\": \"12345\",\r\n \"userStatus\": 1\r\n}",
                "schemaId": "60b976d395edba36988ceda2",
                "typeName": "User"
              },
              {
                "contentType": "application/xml",
                "sample": "<user>\r\n <id>10</id>\r\n <username>theUser</username>\r\n <firstName>John</firstName>\r\n <lastName>James</lastName>\r\n <email>john@email.com</email>\r\n <password>12345</password>\r\n <phone>12345</phone>\r\n <userStatus>1</userStatus>\r\n</user>",
                "schemaId": "60b976d395edba36988ceda2",
                "typeName": "User"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{\r\n \"id\": 10.0,\r\n \"username\": \"theUser\",\r\n \"firstName\": \"John\",\r\n \"lastName\": \"James\",\r\n \"email\": \"john@email.com\",\r\n \"password\": \"12345\",\r\n \"phone\": \"12345\",\r\n \"userStatus\": 1\r\n}",
                "schemaId": "60b976d395edba36988ceda2",
                "typeName": "User"
              },
              {
                "contentType": "application/xml",
                "sample": "<user>\r\n <id>10</id>\r\n <username>theUser</username>\r\n <firstName>John</firstName>\r\n <lastName>James</lastName>\r\n <email>john@email.com</email>\r\n <password>12345</password>\r\n <phone>12345</phone>\r\n <userStatus>1</userStatus>\r\n</user>",
                "schemaId": "60b976d395edba36988ceda2",
                "typeName": "User"
              }
            ]
          },
          {
            "statusCode": 500,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{\r\n \"id\": 10.0,\r\n \"username\": \"theUser\",\r\n \"firstName\": \"John\",\r\n \"lastName\": \"James\",\r\n \"email\": \"john@email.com\",\r\n \"password\": \"12345\",\r\n \"phone\": \"12345\",\r\n \"userStatus\": 1\r\n}",
                "schemaId": "60b976d395edba36988ceda2",
                "typeName": "User"
              },
              {
                "contentType": "application/xml",
                "sample": "<user>\r\n <id>10</id>\r\n <username>theUser</username>\r\n <firstName>John</firstName>\r\n <lastName>James</lastName>\r\n <email>john@email.com</email>\r\n <password>12345</password>\r\n <phone>12345</phone>\r\n <userStatus>1</userStatus>\r\n</user>",
                "schemaId": "60b976d395edba36988ceda2",
                "typeName": "User"
              }
            ]
          }
        ],
        "displayName": "Create user",
        "method": "POST",
        "urlTemplate": "/user"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/createUser')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60b976d395edba36988ceda2')]"
      ]
    },
    {
      "properties": {
        "displayName": "user"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/createUser/user')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'createUser')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Creates list of users with given input array",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "sample": "[[\r\n {\r\n \"id\": 10.0,\r\n \"username\": \"theUser\",\r\n \"firstName\": \"John\",\r\n \"lastName\": \"James\",\r\n \"email\": \"john@email.com\",\r\n \"password\": \"12345\",\r\n \"phone\": \"12345\",\r\n \"userStatus\": 1\r\n }\r\n]",
              "schemaId": "60b976d395edba36988ceda2",
              "typeName": "UserCreateWithListPostRequest"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/xml",
                "sample": "<user>\r\n <id>10</id>\r\n <username>theUser</username>\r\n <firstName>John</firstName>\r\n <lastName>James</lastName>\r\n <email>john@email.com</email>\r\n <password>12345</password>\r\n <phone>12345</phone>\r\n <userStatus>1</userStatus>\r\n</user>",
                "schemaId": "60b976d395edba36988ceda2",
                "typeName": "User"
              },
              {
                "contentType": "application/json",
                "sample": "{\r\n \"id\": 10.0,\r\n \"username\": \"theUser\",\r\n \"firstName\": \"John\",\r\n \"lastName\": \"James\",\r\n \"email\": \"john@email.com\",\r\n \"password\": \"12345\",\r\n \"phone\": \"12345\",\r\n \"userStatus\": 1\r\n}",
                "schemaId": "60b976d395edba36988ceda2",
                "typeName": "User"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "successful operation",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 500,
            "description": "successful operation",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Creates list of users with given input array",
        "method": "POST",
        "urlTemplate": "/user/createWithList"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/createUsersWithListInput')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60b976d395edba36988ceda2')]"
      ]
    },
    {
      "properties": {
        "displayName": "user"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/createUsersWithListInput/user')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'createUsersWithListInput')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "orderId",
            "description": "Format - int64. ID of the order that needs to be deleted",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "description": "For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 400,
            "description": "Invalid ID supplied",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 404,
            "description": "Order not found",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Delete purchase order by ID",
        "method": "DELETE",
        "urlTemplate": "/store/order/{orderId}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/deleteOrder')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]"
      ]
    },
    {
      "properties": {
        "displayName": "store"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/deleteOrder/store')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'deleteOrder')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "username",
            "description": "The name that needs to be deleted",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "This can only be done by the logged in user.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 400,
            "description": "Invalid username supplied",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 404,
            "description": "User not found",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Delete user",
        "method": "DELETE",
        "urlTemplate": "/user/{username}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/deleteUser')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]"
      ]
    },
    {
      "properties": {
        "displayName": "user"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/deleteUser/user')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'deleteUser')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "petId",
            "description": "Format - int64. Pet id to delete",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [
            {
              "name": "api_key",
              "description": "",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 400,
            "description": "Invalid pet value",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Deletes a pet",
        "method": "DELETE",
        "urlTemplate": "/pet/{petId}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/deletePet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]"
      ]
    },
    {
      "properties": {
        "displayName": "pet"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/deletePet/pet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'deletePet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "petId",
            "description": "Format - int64. ID of pet to return",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "description": "Returns a single pet",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/xml",
                "sample": "<pet>\r\n <id>10</id>\r\n <name>doggie</name>\r\n <category>\r\n <id>1</id>\r\n <name>Dogs</name>\r\n </category>\r\n <photoUrls>\r\n <photoUrl>string</photoUrl>\r\n </photoUrls>\r\n <tags>\r\n <tag>\r\n <id>0</id>\r\n <name>string</name>\r\n </tag>\r\n </tags>\r\n <status>available</status>\r\n</pet>",
                "schemaId": "60b976d395edba36988ceda2",
                "typeName": "PetRequest-xml"
              },
              {
                "contentType": "application/json",
                "sample": "{\r\n \"id\": 10.0,\r\n \"name\": \"doggie\",\r\n \"category\": {\r\n \"id\": 1.0,\r\n \"name\": \"Dogs\"\r\n },\r\n \"photoUrls\": [\r\n \"string\"\r\n ],\r\n \"tags\": [\r\n {\r\n \"id\": 0,\r\n \"name\": \"string\"\r\n }\r\n ],\r\n \"status\": \"available\"\r\n}",
                "schemaId": "60b976d395edba36988ceda2",
                "typeName": "PetRequest-xml"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "Invalid ID supplied",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 404,
            "description": "Pet not found",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Find pet by ID",
        "method": "GET",
        "urlTemplate": "/pet/{petId}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/getPetById')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60b976d395edba36988ceda2')]"
      ]
    },
    {
      "properties": {
        "displayName": "pet"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/getPetById/pet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'getPetById')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "orderId",
            "description": "Format - int64. ID of order that needs to be fetched",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "description": "For valid response try integer IDs with value <= 5 or > 10. Other values will generated exceptions",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/xml",
                "sample": "<order>\r\n <id>10</id>\r\n <petId>198772</petId>\r\n <quantity>7</quantity>\r\n <shipDate>string</shipDate>\r\n <status>approved</status>\r\n <complete>true</complete>\r\n</order>",
                "schemaId": "60b976d395edba36988ceda2",
                "typeName": "Order"
              },
              {
                "contentType": "application/json",
                "sample": "{\r\n \"id\": 10.0,\r\n \"petId\": 198772.0,\r\n \"quantity\": 7,\r\n \"shipDate\": \"string\",\r\n \"status\": \"approved\",\r\n \"complete\": true\r\n}",
                "schemaId": "60b976d395edba36988ceda2",
                "typeName": "Order"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "Invalid ID supplied",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 404,
            "description": "Order not found",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Find purchase order by ID",
        "method": "GET",
        "urlTemplate": "/store/order/{orderId}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/getOrderById')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60b976d395edba36988ceda2')]"
      ]
    },
    {
      "properties": {
        "displayName": "store"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/getOrderById/store')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'getOrderById')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Multiple status values can be provided with comma separated strings",
        "request": {
          "queryParameters": [
            {
              "name": "status",
              "description": "Status values that need to be considered for filter",
              "type": "string",
              "defaultValue": "available",
              "required": false,
              "values": [
                "available",
                "pending",
                "sold"
              ]
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/xml",
                "sample": "<pet>\r\n <id>10</id>\r\n <name>doggie</name>\r\n <category>\r\n <id>1</id>\r\n <name>Dogs</name>\r\n </category>\r\n <photoUrls>\r\n <photoUrl>string</photoUrl>\r\n </photoUrls>\r\n <tags>\r\n <tag>\r\n <id>0</id>\r\n <name>string</name>\r\n </tag>\r\n </tags>\r\n <status>available</status>\r\n</pet>",
                "schemaId": "60b976d395edba36988ceda2",
                "typeName": "PetFindByStatusGet200ApplicationXmlResponse"
              },
              {
                "contentType": "application/json",
                "sample": "[[\r\n {\r\n \"id\": 10.0,\r\n \"name\": \"doggie\",\r\n \"category\": {\r\n \"id\": 1.0,\r\n \"name\": \"Dogs\"\r\n },\r\n \"photoUrls\": [\r\n \"string\"\r\n ],\r\n \"tags\": [\r\n {\r\n \"id\": 0,\r\n \"name\": \"string\"\r\n }\r\n ],\r\n \"status\": \"available\"\r\n }\r\n]",
                "schemaId": "60b976d395edba36988ceda2",
                "typeName": "PetFindByStatusGet200ApplicationJsonResponse"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "Invalid status value",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Finds Pets by status",
        "method": "GET",
        "urlTemplate": "/pet/findByStatus"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/findPetsByStatus')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60b976d395edba36988ceda2')]"
      ]
    },
    {
      "properties": {
        "displayName": "pet"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/findPetsByStatus/pet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'findPetsByStatus')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
        "request": {
          "queryParameters": [
            {
              "name": "tags",
              "description": "Tags to filter by",
              "type": "array",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/xml",
                "sample": "<pet>\r\n <id>10</id>\r\n <name>doggie</name>\r\n <category>\r\n <id>1</id>\r\n <name>Dogs</name>\r\n </category>\r\n <photoUrls>\r\n <photoUrl>string</photoUrl>\r\n </photoUrls>\r\n <tags>\r\n <tag>\r\n <id>0</id>\r\n <name>string</name>\r\n </tag>\r\n </tags>\r\n <status>available</status>\r\n</pet>",
                "schemaId": "60b976d395edba36988ceda2",
                "typeName": "PetFindByTagsGet200ApplicationXmlResponse"
              },
              {
                "contentType": "application/json",
                "sample": "[[\r\n {\r\n \"id\": 10.0,\r\n \"name\": \"doggie\",\r\n \"category\": {\r\n \"id\": 1.0,\r\n \"name\": \"Dogs\"\r\n },\r\n \"photoUrls\": [\r\n \"string\"\r\n ],\r\n \"tags\": [\r\n {\r\n \"id\": 0,\r\n \"name\": \"string\"\r\n }\r\n ],\r\n \"status\": \"available\"\r\n }\r\n]",
                "schemaId": "60b976d395edba36988ceda2",
                "typeName": "PetFindByTagsGet200ApplicationJsonResponse"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "Invalid tag value",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Finds Pets by tags",
        "method": "GET",
        "urlTemplate": "/pet/findByTags"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/findPetsByTags')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60b976d395edba36988ceda2')]"
      ]
    },
    {
      "properties": {
        "displayName": "pet"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/findPetsByTags/pet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'findPetsByTags')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "username",
            "description": "The name that needs to be fetched. Use user1 for testing. ",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/xml",
                "sample": "<user>\r\n <id>10</id>\r\n <username>theUser</username>\r\n <firstName>John</firstName>\r\n <lastName>James</lastName>\r\n <email>john@email.com</email>\r\n <password>12345</password>\r\n <phone>12345</phone>\r\n <userStatus>1</userStatus>\r\n</user>",
                "schemaId": "60b976d395edba36988ceda2",
                "typeName": "User"
              },
              {
                "contentType": "application/json",
                "sample": "{\r\n \"id\": 10.0,\r\n \"username\": \"theUser\",\r\n \"firstName\": \"John\",\r\n \"lastName\": \"James\",\r\n \"email\": \"john@email.com\",\r\n \"password\": \"12345\",\r\n \"phone\": \"12345\",\r\n \"userStatus\": 1\r\n}",
                "schemaId": "60b976d395edba36988ceda2",
                "typeName": "User"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "Invalid username supplied",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 404,
            "description": "User not found",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Get user by user name",
        "method": "GET",
        "urlTemplate": "/user/{username}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/getUserByName')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60b976d395edba36988ceda2')]"
      ]
    },
    {
      "properties": {
        "displayName": "user"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/getUserByName/user')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'getUserByName')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "successful operation",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 500,
            "description": "successful operation",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Logs out current logged in user session",
        "method": "GET",
        "urlTemplate": "/user/logout"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/logoutUser')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]"
      ]
    },
    {
      "properties": {
        "displayName": "user"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/logoutUser/user')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'logoutUser')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [
            {
              "name": "username",
              "description": "The user name for login",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "password",
              "description": "The password for login in clear text",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [
              {
                "name": "X-Rate-Limit",
                "description": "calls per hour allowed by the user",
                "type": "integer",
                "required": false,
                "values": []
              },
              {
                "name": "X-Expires-After",
                "description": "date in UTC when toekn expires",
                "type": "string",
                "required": false,
                "values": []
              }
            ],
            "representations": [
              {
                "contentType": "application/xml",
                "sample": "<UserLoginGet200ApplicationXmlResponse>string</UserLoginGet200ApplicationXmlResponse>",
                "schemaId": "60b976d395edba36988ceda2",
                "typeName": "UserLoginGet200ApplicationXmlResponse"
              },
              {
                "contentType": "application/json",
                "sample": "string",
                "schemaId": "60b976d395edba36988ceda2",
                "typeName": "UserLoginGet200ApplicationJsonResponse"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "Invalid username/password supplied",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Logs user into the system",
        "method": "GET",
        "urlTemplate": "/user/login"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/loginUser')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60b976d395edba36988ceda2')]"
      ]
    },
    {
      "properties": {
        "displayName": "user"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/loginUser/user')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'loginUser')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Place a new order in the store",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "sample": "{\r\n \"id\": 10.0,\r\n \"petId\": 198772.0,\r\n \"quantity\": 7,\r\n \"shipDate\": \"string\",\r\n \"status\": \"approved\",\r\n \"complete\": true\r\n}",
              "schemaId": "60b976d395edba36988ceda2",
              "typeName": "Order"
            },
            {
              "contentType": "application/xml",
              "sample": "<order>\r\n <id>10</id>\r\n <petId>198772</petId>\r\n <quantity>7</quantity>\r\n <shipDate>string</shipDate>\r\n <status>approved</status>\r\n <complete>true</complete>\r\n</order>",
              "schemaId": "60b976d395edba36988ceda2",
              "typeName": "Order"
            },
            {
              "contentType": "application/x-www-form-urlencoded",
              "formParameters": [
                {
                  "name": "id",
                  "type": "integer",
                  "required": false,
                  "values": []
                },
                {
                  "name": "petId",
                  "type": "integer",
                  "required": false,
                  "values": []
                },
                {
                  "name": "quantity",
                  "type": "integer",
                  "required": false,
                  "values": []
                },
                {
                  "name": "shipDate",
                  "type": "string",
                  "required": false,
                  "values": []
                },
                {
                  "name": "status",
                  "type": "string",
                  "required": false,
                  "values": [
                    "placed",
                    "approved",
                    "delivered"
                  ]
                },
                {
                  "name": "complete",
                  "type": "boolean",
                  "required": false,
                  "values": []
                }
              ]
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{\r\n \"id\": 10.0,\r\n \"petId\": 198772.0,\r\n \"quantity\": 7,\r\n \"shipDate\": \"string\",\r\n \"status\": \"approved\",\r\n \"complete\": true\r\n}",
                "schemaId": "60b976d395edba36988ceda2",
                "typeName": "Order"
              }
            ]
          },
          {
            "statusCode": 405,
            "description": "Invalid input",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Place an order for a pet",
        "method": "POST",
        "urlTemplate": "/store/order"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/placeOrder')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60b976d395edba36988ceda2')]"
      ]
    },
    {
      "properties": {
        "displayName": "store"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/placeOrder/store')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'placeOrder')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Returns a map of status codes to quantities",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{}",
                "schemaId": "60b976d395edba36988ceda2",
                "typeName": "StoreInventoryGet200ApplicationJsonResponse"
              }
            ]
          }
        ],
        "displayName": "Returns pet inventories by status",
        "method": "GET",
        "urlTemplate": "/store/inventory"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/getInventory')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60b976d395edba36988ceda2')]"
      ]
    },
    {
      "properties": {
        "displayName": "store"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/getInventory/store')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'getInventory')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Update an existing pet by Id",
        "request": {
          "description": "Update an existent pet in the store",
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "sample": "{\r\n \"id\": 10.0,\r\n \"name\": \"doggie\",\r\n \"category\": {\r\n \"id\": 1.0,\r\n \"name\": \"Dogs\"\r\n },\r\n \"photoUrls\": [\r\n \"string\"\r\n ],\r\n \"tags\": [\r\n {\r\n \"id\": 0,\r\n \"name\": \"string\"\r\n }\r\n ],\r\n \"status\": \"available\"\r\n}",
              "schemaId": "60b976d395edba36988ceda2",
              "typeName": "PetRequest-xml"
            },
            {
              "contentType": "application/xml",
              "sample": "<pet>\r\n <id>10</id>\r\n <name>doggie</name>\r\n <category>\r\n <id>1</id>\r\n <name>Dogs</name>\r\n </category>\r\n <photoUrls>\r\n <photoUrl>string</photoUrl>\r\n </photoUrls>\r\n <tags>\r\n <tag>\r\n <id>0</id>\r\n <name>string</name>\r\n </tag>\r\n </tags>\r\n <status>available</status>\r\n</pet>",
              "schemaId": "60b976d395edba36988ceda2",
              "typeName": "PetRequest-xml"
            },
            {
              "contentType": "application/x-www-form-urlencoded",
              "formParameters": [
                {
                  "name": "id",
                  "type": "integer",
                  "required": false,
                  "values": []
                },
                {
                  "name": "name",
                  "type": "string",
                  "required": false,
                  "values": []
                },
                {
                  "name": "category",
                  "type": "object",
                  "required": false,
                  "values": []
                },
                {
                  "name": "photoUrls",
                  "type": "array",
                  "required": false,
                  "values": []
                },
                {
                  "name": "tags",
                  "type": "array",
                  "required": false,
                  "values": []
                },
                {
                  "name": "status",
                  "type": "string",
                  "required": false,
                  "values": [
                    "available",
                    "pending",
                    "sold"
                  ]
                }
              ]
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/xml",
                "sample": "<pet>\r\n <id>10</id>\r\n <name>doggie</name>\r\n <category>\r\n <id>1</id>\r\n <name>Dogs</name>\r\n </category>\r\n <photoUrls>\r\n <photoUrl>string</photoUrl>\r\n </photoUrls>\r\n <tags>\r\n <tag>\r\n <id>0</id>\r\n <name>string</name>\r\n </tag>\r\n </tags>\r\n <status>available</status>\r\n</pet>",
                "schemaId": "60b976d395edba36988ceda2",
                "typeName": "PetRequest-xml"
              },
              {
                "contentType": "application/json",
                "sample": "{\r\n \"id\": 10.0,\r\n \"name\": \"doggie\",\r\n \"category\": {\r\n \"id\": 1.0,\r\n \"name\": \"Dogs\"\r\n },\r\n \"photoUrls\": [\r\n \"string\"\r\n ],\r\n \"tags\": [\r\n {\r\n \"id\": 0,\r\n \"name\": \"string\"\r\n }\r\n ],\r\n \"status\": \"available\"\r\n}",
                "schemaId": "60b976d395edba36988ceda2",
                "typeName": "PetRequest-xml"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "Invalid ID supplied",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 404,
            "description": "Pet not found",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 405,
            "description": "Validation exception",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Update an existing pet",
        "method": "PUT",
        "urlTemplate": "/pet"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/updatePet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60b976d395edba36988ceda2')]"
      ]
    },
    {
      "properties": {
        "displayName": "pet"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/updatePet/pet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'updatePet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "username",
            "description": "name that need to be deleted",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "This can only be done by the logged in user.",
        "request": {
          "description": "Update an existent user in the store",
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "sample": "{\r\n \"id\": 10.0,\r\n \"username\": \"theUser\",\r\n \"firstName\": \"John\",\r\n \"lastName\": \"James\",\r\n \"email\": \"john@email.com\",\r\n \"password\": \"12345\",\r\n \"phone\": \"12345\",\r\n \"userStatus\": 1\r\n}",
              "schemaId": "60b976d395edba36988ceda2",
              "typeName": "User"
            },
            {
              "contentType": "application/xml",
              "sample": "<user>\r\n <id>10</id>\r\n <username>theUser</username>\r\n <firstName>John</firstName>\r\n <lastName>James</lastName>\r\n <email>john@email.com</email>\r\n <password>12345</password>\r\n <phone>12345</phone>\r\n <userStatus>1</userStatus>\r\n</user>",
              "schemaId": "60b976d395edba36988ceda2",
              "typeName": "User"
            },
            {
              "contentType": "application/x-www-form-urlencoded",
              "formParameters": [
                {
                  "name": "id",
                  "type": "integer",
                  "required": false,
                  "values": []
                },
                {
                  "name": "username",
                  "type": "string",
                  "required": false,
                  "values": []
                },
                {
                  "name": "firstName",
                  "type": "string",
                  "required": false,
                  "values": []
                },
                {
                  "name": "lastName",
                  "type": "string",
                  "required": false,
                  "values": []
                },
                {
                  "name": "email",
                  "type": "string",
                  "required": false,
                  "values": []
                },
                {
                  "name": "password",
                  "type": "string",
                  "required": false,
                  "values": []
                },
                {
                  "name": "phone",
                  "type": "string",
                  "required": false,
                  "values": []
                },
                {
                  "name": "userStatus",
                  "type": "integer",
                  "required": false,
                  "values": []
                }
              ]
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "successful operation",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 500,
            "description": "successful operation",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Update user",
        "method": "PUT",
        "urlTemplate": "/user/{username}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/updateUser')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60b976d395edba36988ceda2')]"
      ]
    },
    {
      "properties": {
        "displayName": "user"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/updateUser/user')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'updateUser')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "petId",
            "description": "Format - int64. ID of pet that needs to be updated",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "description": "",
        "request": {
          "queryParameters": [
            {
              "name": "name",
              "description": "Name of pet that needs to be updated",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "status",
              "description": "Status of pet that needs to be updated",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 405,
            "description": "Invalid input",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Updates a pet in the store with form data",
        "method": "POST",
        "urlTemplate": "/pet/{petId}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/updatePetWithForm')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]"
      ]
    },
    {
      "properties": {
        "displayName": "pet"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/updatePetWithForm/pet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'updatePetWithForm')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "petId",
            "description": "Format - int64. ID of pet to update",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "description": "",
        "request": {
          "queryParameters": [
            {
              "name": "additionalMetadata",
              "description": "Additional Metadata",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": [
            {
              "contentType": "application/octet-stream",
              "schemaId": "60b976d395edba36988ceda2",
              "typeName": "Pet-petId-UploadImagePostRequest-2"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{\r\n \"code\": 0,\r\n \"type\": \"string\",\r\n \"message\": \"string\"\r\n}",
                "schemaId": "60b976d395edba36988ceda2",
                "typeName": "ApiResponse"
              }
            ]
          }
        ],
        "displayName": "uploads an image",
        "method": "POST",
        "urlTemplate": "/pet/{petId}/uploadImage"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/uploadFile')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60b976d395edba36988ceda2')]"
      ]
    },
    {
      "properties": {
        "displayName": "pet"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/uploadFile/pet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'uploadFile')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/Petstore-apiPolicy.xml?', parameters('sasToken'))]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'Petstore')]"
      ]
    },
    {
      "properties": {
        "displayName": "cats"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/cats')]",
      "type": "Microsoft.ApiManagement/service/apis/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]"
      ]
    },
    {
      "properties": {
        "displayName": "dogs"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/dogs')]",
      "type": "Microsoft.ApiManagement/service/apis/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]"
      ]
    },
    {
      "properties": {
        "displayName": "pets"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/pets')]",
      "type": "Microsoft.ApiManagement/service/apis/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]"
      ]
    }
  ]
}
