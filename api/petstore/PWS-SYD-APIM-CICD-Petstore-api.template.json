{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ApimServiceName": {
      "type": "string"
    },
    "serviceUrl": {
      "type": "object"
    }
  },
  "resources": [
    {
      "properties": {
        "description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "Petstore",
        "serviceUrl": "[parameters('serviceUrl').Petstore]",
        "path": "",
        "protocols": [
          "http",
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "contentType": "application/vnd.ms-azure-apim.swagger.definitions+json",
        "document": {
          "value": "{\"ApiResponse\":{\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"integer\",\"format\":\"int32\"},\"type\":{\"type\":\"string\"},\"message\":{\"type\":\"string\"}}},\"Category\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"name\":{\"type\":\"string\"}},\"xml\":{\"name\":\"Category\"}},\"Pet\":{\"type\":\"object\",\"required\":[\"name\",\"photoUrls\"],\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"category\":{\"$ref\":\"#/definitions/Category\"},\"name\":{\"type\":\"string\",\"example\":\"doggie\"},\"photoUrls\":{\"type\":\"array\",\"xml\":{\"wrapped\":true},\"items\":{\"type\":\"string\",\"xml\":{\"name\":\"photoUrl\"}}},\"tags\":{\"type\":\"array\",\"xml\":{\"wrapped\":true},\"items\":{\"xml\":{\"name\":\"tag\"},\"$ref\":\"#/definitions/Tag\"}},\"status\":{\"type\":\"string\",\"description\":\"pet status in the store\",\"enum\":[\"available\",\"pending\",\"sold\"]}},\"xml\":{\"name\":\"Pet\"}},\"Tag\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"name\":{\"type\":\"string\"}},\"xml\":{\"name\":\"Tag\"}},\"Order\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"petId\":{\"type\":\"integer\",\"format\":\"int64\"},\"quantity\":{\"type\":\"integer\",\"format\":\"int32\"},\"shipDate\":{\"type\":\"string\",\"format\":\"date-time\"},\"status\":{\"type\":\"string\",\"description\":\"Order Status\",\"enum\":[\"placed\",\"approved\",\"delivered\"]},\"complete\":{\"type\":\"boolean\"}},\"xml\":{\"name\":\"Order\"}},\"User\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"username\":{\"type\":\"string\"},\"firstName\":{\"type\":\"string\"},\"lastName\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"password\":{\"type\":\"string\"},\"phone\":{\"type\":\"string\"},\"userStatus\":{\"type\":\"integer\",\"format\":\"int32\",\"description\":\"User Status\"}},\"xml\":{\"name\":\"User\"}},\"PetId\":{\"format\":\"int64\",\"x-apim-inline\":true},\"Status\":{\"items\":{\"type\":\"string\",\"enum\":[\"available\",\"pending\",\"sold\"],\"default\":\"available\"},\"x-apim-inline\":true},\"PetArray\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/Pet\"}},\"Tags\":{\"items\":{\"type\":\"string\"},\"x-apim-inline\":true},\"StoreInventoryGet200ApplicationJsonResponse\":{\"type\":\"object\",\"additionalProperties\":{\"type\":\"integer\",\"format\":\"int32\"}},\"OrderId\":{\"format\":\"int64\",\"maximum\":10,\"minimum\":1,\"x-apim-inline\":true},\"OrderId-1\":{\"format\":\"int64\",\"minimum\":1,\"x-apim-inline\":true},\"UserArray\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/User\"}},\"X-Expires-After\":{\"format\":\"date-time\",\"x-apim-inline\":true},\"X-Rate-Limit\":{\"format\":\"int32\",\"x-apim-inline\":true},\"UserLoginGet200ApplicationJsonResponse\":{\"type\":\"string\"},\"UserLoginGet200ApplicationXmlResponse\":{\"type\":\"string\"}}"
        }
      },
      "name": "[concat(parameters('ApimServiceName'), '/Petstore/60a34871217d201190c0951c')]",
      "type": "Microsoft.ApiManagement/service/apis/schemas",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'Petstore')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "description": "Pet object that needs to be added to the store",
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "60a34871217d201190c0951c",
              "typeName": "Pet"
            },
            {
              "contentType": "application/xml",
              "schemaId": "60a34871217d201190c0951c",
              "typeName": "Pet"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 405,
            "description": "Invalid input",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Add a new pet to the store",
        "method": "POST",
        "urlTemplate": "/pet"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/addPet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60a34871217d201190c0951c')]"
      ]
    },
    {
      "properties": {
        "displayName": "pet"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/addPet/pet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'addPet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "This can only be done by the logged in user.",
        "request": {
          "description": "Created user object",
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "60a34871217d201190c0951c",
              "typeName": "User"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Create user",
        "method": "POST",
        "urlTemplate": "/user"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/createUser')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60a34871217d201190c0951c')]"
      ]
    },
    {
      "properties": {
        "displayName": "user"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/createUser/user')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'createUser')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "description": "List of user object",
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "60a34871217d201190c0951c",
              "typeName": "UserArray"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Creates list of users with given input array",
        "method": "POST",
        "urlTemplate": "/user/createWithArray"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/createUsersWithArrayInput')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60a34871217d201190c0951c')]"
      ]
    },
    {
      "properties": {
        "displayName": "user"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/createUsersWithArrayInput/user')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'createUsersWithArrayInput')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "description": "List of user object",
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "60a34871217d201190c0951c",
              "typeName": "UserArray"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Creates list of users with given input array",
        "method": "POST",
        "urlTemplate": "/user/createWithList"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/createUsersWithListInput')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60a34871217d201190c0951c')]"
      ]
    },
    {
      "properties": {
        "displayName": "user"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/createUsersWithListInput/user')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'createUsersWithListInput')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "orderId",
            "description": "Format - int64. ID of the order that needs to be deleted",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "description": "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 400,
            "description": "Invalid ID supplied",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          },
          {
            "statusCode": 404,
            "description": "Order not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Delete purchase order by ID",
        "method": "DELETE",
        "urlTemplate": "/store/order/{orderId}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/deleteOrder')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]"
      ]
    },
    {
      "properties": {
        "displayName": "store"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/deleteOrder/store')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'deleteOrder')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "username",
            "description": "The name that needs to be deleted",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "This can only be done by the logged in user.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 400,
            "description": "Invalid username supplied",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          },
          {
            "statusCode": 404,
            "description": "User not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Delete user",
        "method": "DELETE",
        "urlTemplate": "/user/{username}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/deleteUser')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]"
      ]
    },
    {
      "properties": {
        "displayName": "user"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/deleteUser/user')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'deleteUser')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "petId",
            "description": "Format - int64. Pet id to delete",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [
            {
              "name": "api_key",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 400,
            "description": "Invalid ID supplied",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          },
          {
            "statusCode": 404,
            "description": "Pet not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Deletes a pet",
        "method": "DELETE",
        "urlTemplate": "/pet/{petId}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/deletePet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]"
      ]
    },
    {
      "properties": {
        "displayName": "pet"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/deletePet/pet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'deletePet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "petId",
            "description": "Format - int64. ID of pet to return",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "description": "Returns a single pet",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "60a34871217d201190c0951c",
                "typeName": "Pet"
              },
              {
                "contentType": "application/xml",
                "schemaId": "60a34871217d201190c0951c",
                "typeName": "Pet"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "Invalid ID supplied",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          },
          {
            "statusCode": 404,
            "description": "Pet not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Find pet by ID",
        "method": "GET",
        "urlTemplate": "/pet/{petId}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/getPetById')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60a34871217d201190c0951c')]"
      ]
    },
    {
      "properties": {
        "displayName": "pet"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/getPetById/pet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'getPetById')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "orderId",
            "description": "Format - int64. ID of pet that needs to be fetched",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "60a34871217d201190c0951c",
                "typeName": "Order"
              },
              {
                "contentType": "application/xml",
                "schemaId": "60a34871217d201190c0951c",
                "typeName": "Order"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "Invalid ID supplied",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          },
          {
            "statusCode": 404,
            "description": "Order not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Find purchase order by ID",
        "method": "GET",
        "urlTemplate": "/store/order/{orderId}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/getOrderById')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60a34871217d201190c0951c')]"
      ]
    },
    {
      "properties": {
        "displayName": "store"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/getOrderById/store')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'getOrderById')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "status",
            "description": "Status values that need to be considered for filter",
            "type": "array",
            "required": true,
            "values": []
          }
        ],
        "description": "Multiple status values can be provided with comma separated strings",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "60a34871217d201190c0951c",
                "typeName": "PetArray"
              },
              {
                "contentType": "application/xml",
                "schemaId": "60a34871217d201190c0951c",
                "typeName": "PetArray"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "Invalid status value",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Finds Pets by status",
        "method": "GET",
        "urlTemplate": "/pet/findByStatus?status={status}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/findPetsByStatus')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60a34871217d201190c0951c')]"
      ]
    },
    {
      "properties": {
        "displayName": "pet"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/findPetsByStatus/pet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'findPetsByStatus')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "tags",
            "description": "Tags to filter by",
            "type": "array",
            "required": true,
            "values": []
          }
        ],
        "description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "60a34871217d201190c0951c",
                "typeName": "PetArray"
              },
              {
                "contentType": "application/xml",
                "schemaId": "60a34871217d201190c0951c",
                "typeName": "PetArray"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "Invalid tag value",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Finds Pets by tags",
        "method": "GET",
        "urlTemplate": "/pet/findByTags?tags={tags}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/findPetsByTags')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60a34871217d201190c0951c')]"
      ]
    },
    {
      "properties": {
        "displayName": "pet"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/findPetsByTags/pet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'findPetsByTags')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "username",
            "description": "The name that needs to be fetched. Use user1 for testing. ",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "60a34871217d201190c0951c",
                "typeName": "User"
              },
              {
                "contentType": "application/xml",
                "schemaId": "60a34871217d201190c0951c",
                "typeName": "User"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "Invalid username supplied",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          },
          {
            "statusCode": 404,
            "description": "User not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Get user by user name",
        "method": "GET",
        "urlTemplate": "/user/{username}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/getUserByName')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60a34871217d201190c0951c')]"
      ]
    },
    {
      "properties": {
        "displayName": "user"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/getUserByName/user')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'getUserByName')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Logs out current logged in user session",
        "method": "GET",
        "urlTemplate": "/user/logout"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/logoutUser')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]"
      ]
    },
    {
      "properties": {
        "displayName": "user"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/logoutUser/user')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'logoutUser')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "username",
            "description": "The user name for login",
            "type": "string",
            "required": true,
            "values": []
          },
          {
            "name": "password",
            "description": "The password for login in clear text",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [
              {
                "name": "X-Expires-After",
                "description": "date in UTC when token expires",
                "type": "string",
                "required": false,
                "values": []
              },
              {
                "name": "X-Rate-Limit",
                "description": "calls per hour allowed by the user",
                "type": "integer",
                "required": false,
                "values": []
              }
            ],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "60a34871217d201190c0951c",
                "typeName": "UserLoginGet200ApplicationJsonResponse"
              },
              {
                "contentType": "application/xml",
                "schemaId": "60a34871217d201190c0951c",
                "typeName": "UserLoginGet200ApplicationXmlResponse"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "Invalid username/password supplied",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Logs user into the system",
        "method": "GET",
        "urlTemplate": "/user/login?username={username}&password={password}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/loginUser')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60a34871217d201190c0951c')]"
      ]
    },
    {
      "properties": {
        "displayName": "user"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/loginUser/user')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'loginUser')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "description": "order placed for purchasing the pet",
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "60a34871217d201190c0951c",
              "typeName": "Order"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "60a34871217d201190c0951c",
                "typeName": "Order"
              },
              {
                "contentType": "application/xml",
                "schemaId": "60a34871217d201190c0951c",
                "typeName": "Order"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "Invalid Order",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Place an order for a pet",
        "method": "POST",
        "urlTemplate": "/store/order"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/placeOrder')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60a34871217d201190c0951c')]"
      ]
    },
    {
      "properties": {
        "displayName": "store"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/placeOrder/store')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'placeOrder')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Returns a map of status codes to quantities",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "60a34871217d201190c0951c",
                "typeName": "StoreInventoryGet200ApplicationJsonResponse"
              }
            ]
          }
        ],
        "displayName": "Returns pet inventories by status",
        "method": "GET",
        "urlTemplate": "/store/inventory"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/getInventory')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60a34871217d201190c0951c')]"
      ]
    },
    {
      "properties": {
        "displayName": "store"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/getInventory/store')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'getInventory')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "description": "Pet object that needs to be added to the store",
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "60a34871217d201190c0951c",
              "typeName": "Pet"
            },
            {
              "contentType": "application/xml",
              "schemaId": "60a34871217d201190c0951c",
              "typeName": "Pet"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 400,
            "description": "Invalid ID supplied",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          },
          {
            "statusCode": 404,
            "description": "Pet not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          },
          {
            "statusCode": 405,
            "description": "Validation exception",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Update an existing pet",
        "method": "PUT",
        "urlTemplate": "/pet"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/updatePet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60a34871217d201190c0951c')]"
      ]
    },
    {
      "properties": {
        "displayName": "pet"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/updatePet/pet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'updatePet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "username",
            "description": "name that need to be updated",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "This can only be done by the logged in user.",
        "request": {
          "description": "Updated user object",
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "60a34871217d201190c0951c",
              "typeName": "User"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 400,
            "description": "Invalid user supplied",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          },
          {
            "statusCode": 404,
            "description": "User not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Updated user",
        "method": "PUT",
        "urlTemplate": "/user/{username}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/updateUser')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60a34871217d201190c0951c')]"
      ]
    },
    {
      "properties": {
        "displayName": "user"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/updateUser/user')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'updateUser')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "petId",
            "description": "Format - int64. ID of pet that needs to be updated",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/x-www-form-urlencoded",
              "formParameters": [
                {
                  "name": "name",
                  "description": "Updated name of the pet",
                  "type": "string",
                  "required": false,
                  "values": []
                },
                {
                  "name": "status",
                  "description": "Updated status of the pet",
                  "type": "string",
                  "required": false,
                  "values": []
                }
              ]
            }
          ]
        },
        "responses": [
          {
            "statusCode": 405,
            "description": "Invalid input",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Updates a pet in the store with form data",
        "method": "POST",
        "urlTemplate": "/pet/{petId}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/updatePetWithForm')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]"
      ]
    },
    {
      "properties": {
        "displayName": "pet"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/updatePetWithForm/pet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'updatePetWithForm')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "petId",
            "description": "Format - int64. ID of pet to update",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "multipart/form-data",
              "formParameters": [
                {
                  "name": "additionalMetadata",
                  "description": "Additional data to pass to server",
                  "type": "string",
                  "required": false,
                  "values": []
                },
                {
                  "name": "file",
                  "description": "file to upload",
                  "type": "file",
                  "required": false,
                  "values": []
                }
              ]
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "60a34871217d201190c0951c",
                "typeName": "ApiResponse"
              }
            ]
          }
        ],
        "displayName": "uploads an image",
        "method": "POST",
        "urlTemplate": "/pet/{petId}/uploadImage"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/uploadFile')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'petstore', '60a34871217d201190c0951c')]"
      ]
    },
    {
      "properties": {
        "displayName": "pet"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/uploadFile/pet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'petstore', 'uploadFile')]"
      ]
    },
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t\t<set-header name=\"api_key\" exists-action=\"append\">\r\n\t\t\t<value>{{api-key}}</value>\r\n\t\t</set-header>\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/petstore/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'Petstore')]"
      ]
    },
    {
      "properties": {},
      "name": "[concat(parameters('ApimServiceName'), '/petstore/petstore')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'petstore')]"
      ]
    }
  ]
}